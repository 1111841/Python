Python Loops:

When we need to run a single statement or set of statement, loop concept come in mind.

Types of loops:
While loop
For loop
Nested loop

While loop: Repeat a statements or group of statements whilea given condition is True. It test the condition before executing the loop body.
Syntax:
while <condition>:
  {code block}
Example:
counter=0
while counter<10:
   counter = counter+3
   print("Python Loops")
 
for loop: It is designed to repeatedly execute a code block while iterating through a list, tuple, dictionary or other iterables objects of python. The process of traversing a sequence is known as iteration.

syntax:
for i in list:
  statements
  
  
example:
numbers=[4,2,6,7,3,4]
square=0
output=[]
for i in numbers:
   square = value ** 2
   output.append(square)
print("The list of output is", output)

Using else statement with for loop:

string= "Python Loop"
for s in string:
  if s == "o":
     print("IF Block")
else:
   print(s)
   
Range() function in Python:
with the help of the range() function, we may produce a series of numbers. 

example :- range(10) gives value from 0 to 9.


Loop Control statements:

Continue statement:
it returns the control to the beginning of the loop.

example:
for in in "Python Loops":
  if i == "P":
    continue
  print("Currenr Letter:", string)
  
output:
y
t
h
o
n
 
L
o
o
p
s


Break statement:
It stops the execution of the loop when the break statement is reached.
example:
for string in "Python Loops":
  if string == "L":
      break
  print("Current Letter:", string)
  
output:
p
y
t
h
o
n


Pass statements:
Pass statements are used to create empty loops. 
example:
for a string in "Python Loops":
  pass
print('Last Letter:', String)

output:
Last Letter: s

